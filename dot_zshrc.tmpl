# shell initialization
HISTFILE="$HOME/.zsh_history"
HISTSIZE=1000000
SAVEHIST=$HISTSIZE
setopt INC_APPEND_HISTORY
setopt HIST_FIND_NO_DUPS
setopt HIST_IGNORE_ALL_DUPS
setopt HIST_IGNORE_SPACE
setopt HIST_REDUCE_BLANKS
HISTORY_IGNORE="(ls*|cd*|pwd|exit|fc*|clear)"
zshaddhistory() {
  emulate -L zsh
  ## uncomment if HISTORY_IGNORE
  ## should use EXTENDED_GLOB syntax
  setopt extendedglob
  [[ $1 != ${~HISTORY_IGNORE} ]]
}

# Aliases
alias zshrc="vi ~/.zshrc"
alias vi=nvim
alias vim=nvim
alias moi=chezmoi
alias wa="watch -d"
{{ if eq .chezmoi.os "darwin" }}
# use the homebrew tools version of sed
alias pbp=pbpaste
alias pbc=pbcopy
{{- end }}
alias ll="ls -lFGh"
alias la="ls -lAFGh"
alias ltn="ls -lFGt"
alias lto="ls -lFGtr"
alias bc="bc -li"
alias zb="zig build"
alias zbt="zig build test"
alias g=git
alias gs="g status"
# COMPLETIONS

fpath=(~/.config/zsh/completions $fpath)
autoload -Uz compinit && compinit

# EXPORTS
export LANG=en_US.UTF-8
export LC_ALL=en_US.UTF-8
export EDITOR=nvim
export GPG_TTY=$(tty)
# PATHS
{{ if eq .chezmoi.os "darwin" }}
export PATH=/opt/homebrew/bin:$PATH
export PATH="/opt/homebrew/opt/gnu-sed/libexec/gnubin:$PATH"
export PATH="/opt/homebrew/opt/coreutils/libexec/gnubin:$PATH"
{{- end }}
export PATH=$HOME/bin:$HOME/.local/bin:$PATH

# use vim keybindings
# # see http://dougblack.io/words/zsh-vi-mode.html
bindkey -v
bindkey -M viins 'jj' vi-cmd-mode
bindkey '^P' up-history
bindkey '^N' down-history
bindkey '^?' backward-delete-char
bindkey '^h' backward-delete-char
bindkey '^w' backward-kill-word
bindkey '^r' history-incremental-search-backward

# shell customization
{{ if eq .role "work-aws" "work-c1" }}
[ -f "$HOME/.{{ .role }}.zshrc" ] && source "$HOME/.{{ .role }}.zshrc"
{{- end }}

# Hook tools into your shell.
[ -f "$(which mise)" ] && eval "$(mise activate zsh)" || true
[ -f "$(which starship)" ] && type starship_zle-keymap-select >/dev/null || \
{
    eval "$($(which starship) init zsh)"
}
[ -f "$(which zoxide)" ] && eval "$(zoxide init --cmd cd zsh)" || true

# signin with one password
[ -f "$(which op)" ] && eval "$(op signin)" || true
[ -f "$HOME/.config/op/plugins.sh" ] && source "$HOME/.config/op/plugins.sh"
